{"version":3,"file":"static/js/383.a68f16a1.chunk.js","mappings":"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","sources":["modules/MyContacts/MyContactsForm/initialState.js","webpack://react-homework-template/./src/modules/MyContacts/MyContactsForm/myContactsForm.module.css?0c7a","modules/MyContacts/MyContactsForm/MyContactsForm.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/ContactItem/contactItem.module.css?10c4","modules/MyContacts/MyContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/myContactList.module.css?4c03","modules/MyContacts/MyContactList/MyContactList.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactsFilter/myContactsFilter.module.css?5116","modules/MyContacts/MyContactsFilter/MyContactsFilter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/MyContacts/MyContacts.jsx","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"myContactsForm_form__7K569\",\"button\":\"myContactsForm_button__CST9o\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport initialState from './initialState';\n\nimport styles from './myContactsForm.module.css';\n\nconst MyContactsForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default MyContactsForm;\n\nMyContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactItem_item__VUf3q\",\"name\":\"contactItem_name__KstQc\",\"number\":\"contactItem_number__5f4gx\",\"deleteBtn\":\"contactItem_deleteBtn__JT2zm\"};","import PropTypes from 'prop-types';\nimport styles from './contactItem.module.css';\n\nconst ContactItem = ({ id, name, number, removeBook }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}:</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={styles.deleteBtn}\n        onClick={() => removeBook(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"myContactList_list__n9HoE\"};","import PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem/ContactItem';\nimport styles from './myContactList.module.css';\n\nconst MyContactList = ({ contacts, removeBook }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          removeBook={removeBook}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMyContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n\nexport default MyContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"myContactsFilter_wrapper__ApCxS\",\"label\":\"myContactsFilter_label__IiMGa\"};","import PropTypes from 'prop-types';\n\nimport styles from './myContactsFilter.module.css';\n\nconst MyContactsFilter = ({ value, onChange }) => (\n  <div className={styles.wrapper}>\n    <label className={styles.label} htmlFor=\"filter\">\n      Find contacts by name\n    </label>\n    <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n  </div>\n);\n\nexport default MyContactsFilter;\n\nMyContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","export const getAllContacts = store => store.contacts;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport MyContactsForm from './MyContactsForm/MyContactsForm';\nimport MyContactList from './MyContactList/MyContactList';\nimport MyContactsFilter from './MyContactsFilter/MyContactsFilter';\n\nimport { addContact, deleteContact } from '../../redux/contacts/contacts-slice';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nconst MyContacts = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleAddContact = ({ name, number }) => {\n    const normalaizedName = name.toLowerCase();\n\n    if (\n      allContacts.find(\n        contact => contact.name.toLowerCase() === normalaizedName\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <MyContactsForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      <MyContactsFilter value={filter} onChange={handleFilter} />\n      {isContacts && (\n        <MyContactList\n          contacts={filteredContacts}\n          removeBook={handleDeleteContact}\n        />\n      )}\n      {!isContacts && <p>No contacts in list, yet</p>}\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from 'modules/MyContacts/MyContacts';\n\nconst MyBooksPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyBooksPage;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","handleChange","target","newValue","value","prevState","e","preventDefault","className","styles","onChange","type","pattern","title","required","id","removeBook","onClick","contacts","map","htmlFor","getAllContacts","store","getFilteredContacts","filter","normalizedFilter","toLowerCase","contact","includes","getFilter","filteredContacts","useSelector","allContacts","dispatch","useDispatch","isContacts","Boolean","length","normalaizedName","find","alert","addContact","setFilter","deleteContact"],"sourceRoot":""}