{"version":3,"file":"static/js/689.b9a91883.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","modules/MyContacts/MyContactsForm/initialState.js","webpack://react-homework-template/./src/modules/MyContacts/MyContactsForm/myContactsForm.module.css?0c7a","modules/MyContacts/MyContactsForm/MyContactsForm.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/ContactItem/contactItem.module.css?10c4","modules/MyContacts/MyContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/myContactList.module.css?4c03","modules/MyContacts/MyContactList/MyContactList.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactsFilter/myContactsFilter.module.css?5116","modules/MyContacts/MyContactsFilter/MyContactsFilter.jsx","../node_modules/nanoid/index.browser.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/MyContacts/MyContacts.jsx","redux/contacts/contacts-actions.js","redux/filter/filter-actions.js","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"myContactsForm_form__7K569\",\"button\":\"myContactsForm_button__CST9o\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport initialState from './initialState';\n\nimport styles from './myContactsForm.module.css';\n\nconst MyContactsForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default MyContactsForm;\n\nMyContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactItem_item__VUf3q\",\"name\":\"contactItem_name__KstQc\",\"number\":\"contactItem_number__5f4gx\",\"deleteBtn\":\"contactItem_deleteBtn__JT2zm\"};","import PropTypes from 'prop-types';\nimport styles from './contactItem.module.css';\n\nconst ContactItem = ({ id, name, number, removeBook }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}:</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={styles.deleteBtn}\n        onClick={() => removeBook(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"myContactList_list__n9HoE\"};","import PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem/ContactItem';\nimport styles from './myContactList.module.css';\n\nconst MyContactList = ({ contacts, removeBook }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          removeBook={removeBook}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMyContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n\nexport default MyContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"myContactsFilter_wrapper__ApCxS\",\"label\":\"myContactsFilter_label__IiMGa\"};","import PropTypes from 'prop-types';\n\nimport styles from './myContactsFilter.module.css';\n\nconst MyContactsFilter = ({ value, onChange }) => (\n  <div className={styles.wrapper}>\n    <label className={styles.label} htmlFor=\"filter\">\n      Find contacts by name\n    </label>\n    <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n  </div>\n);\n\nexport default MyContactsFilter;\n\nMyContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const getAllContacts = store => store.contacts;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport MyContactsForm from './MyContactsForm/MyContactsForm';\nimport MyContactList from './MyContactList/MyContactList';\nimport MyContactsFilter from './MyContactsFilter/MyContactsFilter';\n\nimport {\n  addContact,\n  deleteContact,\n} from '../../redux/contacts/contacts-actions';\nimport { setFilter } from 'redux/filter/filter-actions';\n\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nconst MyContacts = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleAddContact = ({ name, number }) => {\n    const normalaizedName = name.toLowerCase();\n\n    if (\n      allContacts.find(\n        contact => contact.name.toLowerCase() === normalaizedName\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <MyContactsForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      <MyContactsFilter value={filter} onChange={handleFilter} />\n      {isContacts && (\n        <MyContactList\n          contacts={filteredContacts}\n          removeBook={handleDeleteContact}\n        />\n      )}\n      {!isContacts && <p>No contacts in list, yet</p>}\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import { nanoid } from 'nanoid';\nimport { ADD_CONTACT, DELETE_CONTACT } from './contacts-types';\n\nexport const addContact = payload => {\n  return {\n    type: ADD_CONTACT,\n    payload: {\n      id: nanoid(),\n      ...payload,\n    },\n  };\n};\n\nexport const deleteContact = payload => {\n  return {\n    type: DELETE_CONTACT,\n    payload,\n  };\n};\n","import { SET_FILTER } from './filter-types';\nexport const setFilter = payload => {\n  return {\n    type: SET_FILTER,\n    payload,\n  };\n};\n","import MyContacts from 'modules/MyContacts/MyContacts';\n\nconst MyBooksPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyBooksPage;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","name","number","onSubmit","useState","initialState","state","setState","handleChange","newValue","prevState","e","preventDefault","className","styles","onChange","type","pattern","title","required","id","removeBook","onClick","contacts","map","htmlFor","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","getAllContacts","store","getFilteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilter","filteredContacts","useSelector","allContacts","dispatch","useDispatch","isContacts","Boolean","payload","normalaizedName","find","alert","ADD_CONTACT","SET_FILTER","DELETE_CONTACT"],"sourceRoot":""}